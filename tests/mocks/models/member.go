// Code generated by MockGen. DO NOT EDIT.
// Source: models/member.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	context "context"
	reflect "reflect"

	models "codeberg.org/mjh/LibRate/models"
	gomock "github.com/golang/mock/gomock"
)

// MockMemberStorer is a mock of MemberStorer interface.
type MockMemberStorer struct {
	ctrl     *gomock.Controller
	recorder *MockMemberStorerMockRecorder
}

// MockMemberStorerMockRecorder is the mock recorder for MockMemberStorer.
type MockMemberStorerMockRecorder struct {
	mock *MockMemberStorer
}

// NewMockMemberStorer creates a new mock instance.
func NewMockMemberStorer(ctrl *gomock.Controller) *MockMemberStorer {
	mock := &MockMemberStorer{ctrl: ctrl}
	mock.recorder = &MockMemberStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberStorer) EXPECT() *MockMemberStorerMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockMemberStorer) Delete(ctx context.Context, member *models.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, member)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockMemberStorerMockRecorder) Delete(ctx, member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockMemberStorer)(nil).Delete), ctx, member)
}

// Read mocks base method.
func (m *MockMemberStorer) Read(ctx context.Context, member *models.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", ctx, member)
	ret0, _ := ret[0].(error)
	return ret0
}

// Read indicates an expected call of Read.
func (mr *MockMemberStorerMockRecorder) Read(ctx, member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockMemberStorer)(nil).Read), ctx, member)
}

// Save mocks base method.
func (m *MockMemberStorer) Save(ctx context.Context, member *models.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, member)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMemberStorerMockRecorder) Save(ctx, member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMemberStorer)(nil).Save), ctx, member)
}

// Update mocks base method.
func (m *MockMemberStorer) Update(ctx context.Context, member *models.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, member)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMemberStorerMockRecorder) Update(ctx, member interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMemberStorer)(nil).Update), ctx, member)
}
