// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/members/lib.go
//
// Generated by this command:
//
//	mockgen -source controllers/members/lib.go -destination tests/mocks/controllers/members/lib.go
//
// Package mock_members is a generated GoMock package.
package mock_members

import (
	reflect "reflect"

	v2 "github.com/gofiber/fiber/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockIMemberController is a mock of IMemberController interface.
type MockIMemberController struct {
	ctrl     *gomock.Controller
	recorder *MockIMemberControllerMockRecorder
}

// MockIMemberControllerMockRecorder is the mock recorder for MockIMemberController.
type MockIMemberControllerMockRecorder struct {
	mock *MockIMemberController
}

// NewMockIMemberController creates a new mock instance.
func NewMockIMemberController(ctrl *gomock.Controller) *MockIMemberController {
	mock := &MockIMemberController{ctrl: ctrl}
	mock.recorder = &MockIMemberControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMemberController) EXPECT() *MockIMemberControllerMockRecorder {
	return m.recorder
}

// DeleteMember mocks base method.
func (m *MockIMemberController) DeleteMember(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMember", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMember indicates an expected call of DeleteMember.
func (mr *MockIMemberControllerMockRecorder) DeleteMember(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMember", reflect.TypeOf((*MockIMemberController)(nil).DeleteMember), c)
}

// GetMember mocks base method.
func (m *MockIMemberController) GetMember(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMember", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetMember indicates an expected call of GetMember.
func (mr *MockIMemberControllerMockRecorder) GetMember(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMember", reflect.TypeOf((*MockIMemberController)(nil).GetMember), c)
}

// UpdateMember mocks base method.
func (m *MockIMemberController) UpdateMember(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMember", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMember indicates an expected call of UpdateMember.
func (mr *MockIMemberControllerMockRecorder) UpdateMember(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMember", reflect.TypeOf((*MockIMemberController)(nil).UpdateMember), c)
}
