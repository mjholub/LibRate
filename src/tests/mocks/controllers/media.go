// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/media.go

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	reflect "reflect"

	v2 "github.com/gofiber/fiber/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockIMediaController is a mock of IMediaController interface.
type MockIMediaController struct {
	ctrl     *gomock.Controller
	recorder *MockIMediaControllerMockRecorder
}

// MockIMediaControllerMockRecorder is the mock recorder for MockIMediaController.
type MockIMediaControllerMockRecorder struct {
	mock *MockIMediaController
}

// NewMockIMediaController creates a new mock instance.
func NewMockIMediaController(ctrl *gomock.Controller) *MockIMediaController {
	mock := &MockIMediaController{ctrl: ctrl}
	mock.recorder = &MockIMediaControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMediaController) EXPECT() *MockIMediaControllerMockRecorder {
	return m.recorder
}

// AddMedia mocks base method.
func (m *MockIMediaController) AddMedia(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMedia", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMedia indicates an expected call of AddMedia.
func (mr *MockIMediaControllerMockRecorder) AddMedia(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMedia", reflect.TypeOf((*MockIMediaController)(nil).AddMedia), c)
}

// GetMedia mocks base method.
func (m *MockIMediaController) GetMedia(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMedia", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetMedia indicates an expected call of GetMedia.
func (mr *MockIMediaControllerMockRecorder) GetMedia(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMedia", reflect.TypeOf((*MockIMediaController)(nil).GetMedia), c)
}

// GetRandom mocks base method.
func (m *MockIMediaController) GetRandom(c *v2.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandom", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetRandom indicates an expected call of GetRandom.
func (mr *MockIMediaControllerMockRecorder) GetRandom(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandom", reflect.TypeOf((*MockIMediaController)(nil).GetRandom), c)
}
